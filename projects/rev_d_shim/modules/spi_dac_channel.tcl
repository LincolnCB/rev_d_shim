### DAC Channel Module
## This module implements a DAC channel with an integrator and SPI interface.

# System signals
create_bd_pin -dir I -type clock spi_clk
create_bd_pin -dir I -type reset resetn

# Config parameters
create_bd_pin -dir I -from 31 -to 0 integ_window
create_bd_pin -dir I -from 14 -to 0 integ_thresh_avg
create_bd_pin -dir I integ_en
create_bd_pin -dir I -from 4 -to 0 dac_n_cs_high_time
create_bd_pin -dir I -from 15 -to 0 dac_cal_init
create_bd_pin -dir I boot_test_skip
create_bd_pin -dir I debug

## Status signals
# System status
create_bd_pin -dir O setup_done
# Integrator status
create_bd_pin -dir O over_thresh
create_bd_pin -dir O thresh_overflow
create_bd_pin -dir O thresh_underflow
# DAC SPI controller status
create_bd_pin -dir O boot_fail
create_bd_pin -dir O bad_cmd
create_bd_pin -dir O cal_oob
create_bd_pin -dir O dac_val_oob
create_bd_pin -dir O cmd_buf_underflow
create_bd_pin -dir O data_buf_overflow
create_bd_pin -dir O unexp_trig
create_bd_pin -dir O ldac_misalign
create_bd_pin -dir O delay_too_short

# Commands and data
create_bd_pin -dir I -from 31 -to 0 dac_cmd
create_bd_pin -dir O dac_cmd_rd_en
create_bd_pin -dir I dac_cmd_empty
create_bd_pin -dir O -from 31 -to 0 dac_data
create_bd_pin -dir O dac_data_wr_en
create_bd_pin -dir I dac_data_full

# Block command buffer until HW Manager is ready
create_bd_pin -dir I block_bufs

# Trigger
create_bd_pin -dir I trigger
create_bd_pin -dir O waiting_for_trig

# SPI interface signals
# Note that LDAC is an input because it's shared across multiple channels, generated by the SPI controller
create_bd_pin -dir O n_cs
create_bd_pin -dir O mosi
create_bd_pin -dir O ldac
create_bd_pin -dir I ldac_shared
create_bd_pin -dir I miso
create_bd_pin -dir I miso_sck

##################################################

### DAC SPI Controller
## Block the command buffer if needed (cmd_buf_empty OR block_bufs)
cell xilinx.com:ip:util_vector_logic dac_cmd_empty_blocked {
  C_SIZE 1
  C_OPERATION or
} {
  Op1 dac_cmd_empty
  Op2 block_bufs
}
## Block the data buffer if needed (data_buf_full OR (block_bufs AND NOT debug))
cell xilinx.com:ip:util_vector_logic n_debug {
  C_SIZE 1
  C_OPERATION not
} {
  Op1 debug
}
cell xilinx.com:ip:util_vector_logic block_bufs_and_not_debug {
  C_SIZE 1
  C_OPERATION and
} {
  Op1 block_bufs
  Op2 n_debug/Res
}
cell xilinx.com:ip:util_vector_logic dac_data_full_blocked {
  C_SIZE 1
  C_OPERATION or
} {
  Op1 dac_data_full
  Op2 block_bufs_and_not_debug/Res
}
## MISO clock-domain synchronous reset
cell xilinx.com:ip:proc_sys_reset:5.0 miso_rst {} {
  ext_reset_in resetn
  slowest_sync_clk miso_sck
}
## DAC SPI core
cell lcb:user:shim_ad5676_dac_ctrl dac_spi {
  ABS_CAL_MAX 4096
} {
  clk spi_clk
  resetn resetn
  boot_test_skip boot_test_skip
  debug debug
  n_cs_high_time dac_n_cs_high_time
  cal_init_val dac_cal_init
  cmd_buf_rd_en dac_cmd_rd_en
  cmd_buf_word dac_cmd
  cmd_buf_empty dac_cmd_empty_blocked/Res
  data_buf_wr_en dac_data_wr_en
  data_word dac_data
  data_buf_full dac_data_full_blocked/Res
  trigger trigger
  ldac_shared ldac_shared
  waiting_for_trig waiting_for_trig
  cmd_buf_underflow cmd_buf_underflow
  data_buf_overflow data_buf_overflow
  unexp_trig unexp_trig
  ldac_misalign ldac_misalign
  delay_too_short delay_too_short
  boot_fail boot_fail
  bad_cmd bad_cmd
  cal_oob cal_oob
  dac_val_oob dac_val_oob
  n_cs n_cs
  mosi mosi
  miso miso
  miso_sck miso_sck
  miso_resetn miso_rst/peripheral_aresetn
  ldac ldac
}

##################################################

### Integrator

# Instantiate the threshold integrator module
cell lcb:user:shim_threshold_integrator threshold_core {} {
  clk spi_clk
  resetn resetn
  enable integ_en
  window integ_window
  threshold_average integ_thresh_avg
  sample_core_done dac_spi/setup_done
  abs_sample_concat dac_spi/abs_dac_val_concat
  err_overflow thresh_overflow
  err_underflow thresh_underflow
  over_thresh over_thresh
}

# Negate integ_en for setup checking
cell xilinx.com:ip:util_vector_logic n_integ_en {
  C_SIZE 1
  C_OPERATION not
} {
  Op1 integ_en
}

# Integrator marked done if integrator is done or disabled
cell xilinx.com:ip:util_vector_logic integ_done {
  C_SIZE 1
  C_OPERATION or
} {
  Op1 n_integ_en/Res
  Op2 threshold_core/setup_done
}

# Setup is done if integrator and DAC SPI controller are both done
cell xilinx.com:ip:util_vector_logic setup_done_and {
  C_SIZE 1
  C_OPERATION and
} {
  Op1 integ_done/Res
  Op2 dac_spi/setup_done
  Res setup_done
}
